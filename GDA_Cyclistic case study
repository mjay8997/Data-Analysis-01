install.packages('tidyverse')
install.packages('lubridate')
library(tidyverse)
library(lubridate)
library(ggplot2)
library(dplyr)
library(readr)
colnames(df12)

#Rename columns
df12 <- rename(df12,
              trip_id = ride_id,
              bike_id = rideable_type,
              start_time = started_at,
              end_time = ended_at,
              usertype = member_casual)
              
#Combine all rows
all_trips <- bind_rows(df1,df2,df3,df4,df5,df6,df7,df8,df9,df10,df11,df12)
View(all_trips)

#inspect new table created
colnames(all_trips)
nrow(all_trips)
dim(all_trips)
summary(all_trips)

#check for unique enteries in a column
table(all_trips$usertype)

#Add columns to table that list date, month, year, day of each ride
all_trips$date <- as.Date(all_trips$start_time)
all_trips$day <- format(as.Date(all_trips$date), "%d")
all_trips$month <- format(as.Date(all_trips$date), "%m")
all_trips$year <- format(as.Date(all_trips$date), "%Y")
all_trips$day_name <- format(as.Date(all_trips$date), "%A")

#ride length calculation in seconds
all_trips$ride_length <- difftime(all_trips$end_time,all_trips$start_time)
str(all_trips)

#Convert ride length column from factor to numeric to perform calculation
is.factor(all_trips$ride_length)
all_trips$ride_length <- as.numeric(as.character(all_trips$ride_length))
is.numeric(all_trips$ride_length)

#check for ridelength ZERO, can be taken out by company for maintenance
all_trips %>%
  filter(ride_length == 0)
all_trips_new <- all_trips[!(all_trips$ride_length<0),]

DESCRPTIVE ANALYSIS

#descriptive analysis on ride length
mean(all_trips$ride_length)
median(all_trips$ride_length)
max(all_trips$ride_length)
min(all_trips$ride_length)
#All above functions can be consolidated as given below
summary(all_trips$ride_length)

#export cleaned data to new csv file
write_csv(all_trips, "cyclistic_cleaned_data")

#compare members and casual users
aggregate(all_trips$ride_length ~ all_trips$usertype, FUN = mean)
aggregate(all_trips$ride_length ~ all_trips$usertype, FUN = median)
aggregate(all_trips$ride_length ~ all_trips$usertype, FUN = max)
aggregate(all_trips$ride_length ~ all_trips$usertype, FUN = min)

#See average ride time by each day for members and casual users (line 92)
aggregate(all_trips$ride_length ~ all_trips$usertype + all_trips$day_name, FUN = mean)

#We notice that days are not in order, so fix it
all_trips$day_name <- ordered(all_trips$day_name, levels=c("Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"))

#analyze ridership data by type and weekday
all_trips %>%
  mutate(weekday = wday(start_time, label = TRUE)) %>%
  group_by(usertype, weekday) %>%
  summarise(number_of_rides = n(), avg_duration = mean(ride_length)) %>%
  arrange(usertype, weekday)

#All rides by day of week and type of rider
all_trips_by_day <- all_trips %>%
  group_by(usertype, day_name) %>%
  summarise(number_of_rides=n(), avg_duration=mean(ride_length)) %>%
  arrange(usertype, day_name)

#visualise number of rides by rider type
all_trips %>%
  mutate(weekday = wday(start_time, label = TRUE)) %>%
  group_by(usertype, weekday) %>%
  summarise(number_of_rides = n(), avg_duration = mean(ride_length)) %>%
  arrange(usertype, weekday) %>%
  ggplot(aes(x=weekday, y=number_of_rides, fill = usertype)) + geom_col(position = "dodge") + scale_y_continuous(labels = comma)

#Visualise average duration of ride by rider type
all_trips %>%
  mutate(weekday = wday(start_time, label = TRUE)) %>%
  group_by(usertype, weekday) %>%
  summarise(number_of_rides = n(), avg_duration = mean(ride_length)) %>%
  arrange(usertype, weekday) %>%
  ggplot(aes(x=weekday, y=avg_duration , fill = usertype)) + geom_col(position = "dodge") + scale_y_continuous(labels = comma)

#EXPORT SUMMARY FILE FOR FURTHER ANALYSIS

#Total and avg number of weekly rides by rider type
summary_wd <- all_trips %>%
  mutate(weekday = wday(start_time, label = TRUE)) %>%
  group_by(usertype, weekday) %>%
  summarise(number_of_rides = n(), avg_duration = mean(ride_length)) %>%
  arrange(usertype, weekday)
write_csv(summary_wd, "summary_ride_length_weekday.csv")

#Total and avg number of monthly rides by rider type
summary_month <- all_trips %>%
  mutate(month = month(start_time, label = TRUE)) %>%
  group_by(month, usertype) %>%
  summarise(number_of_rides = n(), avg_duration = mean(ride_length)) %>%
  arrange(month, usertype)
write_csv(summary_month, "summary_ride_length_month.csv")

#stations most used by each user group
summary_station <- all_trips %>%
  mutate(station = start_station_name) %>%
  drop_na(start_station_name) %>%
  group_by(start_station_name, usertype) %>%
  summarise(number_of_rides = n()) %>%
  arrange(number_of_rides)
write_csv(summary_station, "summary_station.csv")
